{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/patrickspafford/Documents/gitRepos/covidApp/screens/dailyStats.js\";\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { LineChart, BarChart, PieChart, ProgressChart } from 'react-native-chart-kit';\nimport { Ionicons } from '@expo/vector-icons';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nvar screenHeight = Dimensions.get(\"window\").height;\nvar screenWidth = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  pageTitle: {\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#0C2340'\n  },\n  contentContainer: {\n    paddingTop: 15,\n    backgroundColor: '#0C2340'\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#ffffff',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#0C2340',\n    flexDirection: 'row'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n});\n\nfunction OptionButton(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label;\n  return React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0, 1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, label)));\n}\n\nexport default function dailyStats() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      states = _React$useState2[0],\n      setStates = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      cases = _React$useState4[0],\n      setCases = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tested = _React$useState6[0],\n      setTested = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      deaths = _React$useState8[0],\n      setDeaths = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      colors = _React$useState10[0],\n      setColors = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      hospitalized = _React$useState12[0],\n      setHospitalized = _React$useState12[1];\n\n  React.useEffect(function () {\n    function fetchData() {\n      var res;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://covidtracking.com/api/states\"));\n\n            case 2:\n              res = _context.sent;\n              res.json().then(function (res) {\n                var statesArray = [];\n                var casesArray = [];\n                var testedArray = [];\n                var deathsArray = [];\n                var hospitalizedArray = [];\n                res.forEach(function (info) {\n                  statesArray.push(info.state);\n                  casesArray.push(info.positive);\n                  testedArray.push(info.totalTestResults);\n                  deathsArray.push(info.death);\n                  hospitalizedArray.push(info.hospitalizedCumulative);\n                });\n                setStates(statesArray);\n                setCases(casesArray);\n                setTested(testedArray);\n                setDeaths(deathsArray);\n                setHospitalized(hospitalizedArray);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  });\n  var barChartConfig = {\n    backgroundGradientFrom: \"#0C2340\",\n    backgroundGradientFromOpacity: 1,\n    backgroundGradientTo: \"#000000\",\n    backgroundGradientToOpacity: 1,\n    fillShadowGradient: \"rgb(255, 255, 255)\",\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(255, 255, 255, \" + opacity + \")\";\n    },\n    strokeWidth: 2,\n    barPercentage: .9\n  };\n  var pieChartData = [];\n\n  for (var i = 0; i < states.length; i++) {\n    pieChartData.push({\n      name: states[i],\n      cases: cases[i],\n      color: \"#000000\",\n      legendFontColor: \"#ffffff\",\n      legendFontSize: 10\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-medkit\",\n    label: \"Tests by State\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, React.createElement(BarChart, {\n    data: {\n      labels: states,\n      datasets: [{\n        data: tested\n      }]\n    },\n    width: 2500,\n    height: screenHeight / 4,\n    chartConfig: barChartConfig,\n    fromZero: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-sad\",\n    label: \"Cases by State\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(PieChart, {\n    data: pieChartData,\n    width: screenWidth,\n    height: 1000,\n    chartConfig: barChartConfig,\n    backgroundColor: \"transparent\",\n    paddingLeft: \"15\",\n    absolute: true,\n    accessor: \"cases\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-warning\",\n    label: \"Deaths by State\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, React.createElement(BarChart, {\n    data: {\n      labels: states,\n      datasets: [{\n        data: deaths\n      }]\n    },\n    width: 2500,\n    height: screenHeight / 4,\n    chartConfig: barChartConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/patrickspafford/Documents/gitRepos/covidApp/screens/dailyStats.js"],"names":["WebBrowser","React","LineChart","BarChart","PieChart","ProgressChart","Ionicons","Collapse","CollapseHeader","CollapseBody","RectButton","ScrollView","screenHeight","Dimensions","get","height","screenWidth","width","styles","StyleSheet","create","pageTitle","textAlign","container","flex","backgroundColor","contentContainer","paddingTop","optionIconContainer","marginRight","option","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","flexDirection","lastOption","optionText","fontSize","alignSelf","marginTop","OptionButton","icon","label","optionTextContainer","dailyStats","useState","states","setStates","cases","setCases","tested","setTested","deaths","setDeaths","colors","setColors","hospitalized","setHospitalized","useEffect","fetchData","fetch","res","json","then","statesArray","casesArray","testedArray","deathsArray","hospitalizedArray","forEach","info","push","state","positive","totalTestResults","death","hospitalizedCumulative","catch","err","console","log","barChartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","fillShadowGradient","color","opacity","strokeWidth","barPercentage","pieChartData","i","length","name","legendFontColor","legendFontSize","labels","datasets","data"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { LineChart, BarChart, PieChart, ProgressChart } from 'react-native-chart-kit'\nimport { Ionicons } from '@expo/vector-icons';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View, Dimensions } from 'react-native';\nimport { Collapse, CollapseHeader, CollapseBody} from 'accordion-collapse-react-native'\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n// import Axios from 'axios';\n\n\nconst screenHeight = Dimensions.get(\"window\").height;\nconst screenWidth = Dimensions.get(\"window\").width;\n\n\nconst styles = StyleSheet.create({\n    pageTitle:{\n        textAlign: 'center'\n    },\n    container: {\n      flex: 1,\n      backgroundColor: '#0C2340',\n    },\n    contentContainer: {\n      paddingTop: 15,\n      backgroundColor: '#0C2340'\n    },\n    optionIconContainer: {\n      marginRight: 12,\n    },\n    option: {\n      backgroundColor: '#ffffff',\n      paddingHorizontal: 15,\n      paddingVertical: 15,\n      borderWidth: StyleSheet.hairlineWidth,\n      borderBottomWidth: 0,\n      borderColor: '#0C2340',\n      flexDirection: 'row'\n    },\n    lastOption: {\n      borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n    optionText: {\n      fontSize: 15,\n      alignSelf: 'flex-start',\n      marginTop: 1,\n    },\n  });\n  \n\nfunction OptionButton({ icon, label }) {\n    return (\n        <View style={styles.option}>\n          <View style={styles.optionIconContainer}>\n            <Ionicons name={icon} size={22} color=\"rgba(0,0,0, 1)\" />\n          </View>\n          <View style={styles.optionTextContainer}>\n            <Text style={styles.optionText}>{label}</Text>\n          </View>\n        </View>\n    );\n  }\n\nexport default function dailyStats() {\n    const [states, setStates] = React.useState([])\n    const [cases, setCases] = React.useState([])\n    const [tested, setTested] = React.useState([])\n    const [deaths, setDeaths] = React.useState([])\n    const [colors, setColors] = React.useState([])\n    const [hospitalized, setHospitalized] = React.useState([])\n    React.useEffect( () => {\n        async function fetchData() {\n            const res = await fetch(\"https://covidtracking.com/api/states\")\n            res.json()\n            .then(res => {\n            let statesArray = []\n            let casesArray = []\n            let testedArray = []\n            let deathsArray = []\n            let hospitalizedArray = []\n            res.forEach(info => {\n                statesArray.push(info.state)\n                casesArray.push(info.positive)\n                testedArray.push(info.totalTestResults)\n                deathsArray.push(info.death)\n                hospitalizedArray.push(info.hospitalizedCumulative)\n            })\n            setStates(statesArray)\n            setCases(casesArray)\n            setTested(testedArray)\n            setDeaths(deathsArray)\n            setHospitalized(hospitalizedArray)\n        })\n        .catch(err => console.log(err))\n        }\n    fetchData();\n        \n    }) \n    const barChartConfig = {\n        backgroundGradientFrom: `#0C2340`,\n        backgroundGradientFromOpacity: 1,\n        backgroundGradientTo: `#000000`,\n        backgroundGradientToOpacity: 1,\n        fillShadowGradient: `rgb(255, 255, 255)`,\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        strokeWidth: 2, // optional, default 3\n        barPercentage: .9,\n    }\n    let pieChartData = []\n    for (let i = 0; i < states.length; i++) {\n        pieChartData.push(\n            {\n                name: states[i],\n                cases: cases[i],\n                color: `#000000`,\n                legendFontColor: `#ffffff`,\n                legendFontSize: 10\n\n            }\n        )\n    }\n    return (\n        <ScrollView style={styles.container}>\n            <Collapse>\n                <CollapseHeader>\n                <OptionButton style={styles.option} icon=\"md-medkit\" label=\"Tests by State\" />\n                </CollapseHeader>\n                <CollapseBody>\n                <ScrollView horizontal={true}>\n                    <BarChart\n                    data={{\n                        labels: states,\n                        datasets: [\n                            {\n                                data: tested\n                            }\n                        ]\n                    }}\n                    width={2500}\n                    height={screenHeight / 4}\n                    chartConfig={barChartConfig}\n                    fromZero={true}\n                    />\n                    </ScrollView>\n                </CollapseBody>\n            </Collapse>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"md-sad\" label=\"Cases by State\" />\n                </CollapseHeader>\n                <CollapseBody>\n                    <PieChart\n                        data={pieChartData}\n                        width={screenWidth}\n                        height={1000}\n                        chartConfig={barChartConfig}\n                        backgroundColor=\"transparent\"\n                        paddingLeft=\"15\"\n                        absolute\n                        accessor=\"cases\"\n\n                    />\n                </CollapseBody>\n            </Collapse>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"md-warning\" label=\"Deaths by State\" />\n                </CollapseHeader>\n                <CollapseBody>\n                    <BarChart\n                    data={{\n                        labels: states,\n                        datasets: [\n                            {\n                                data: deaths\n                            }\n                        ]\n                    }}\n                    width={2500}\n                    height={screenHeight / 4}\n                    chartConfig={barChartConfig}\n                    />\n                </CollapseBody>\n            </Collapse>\n        </ScrollView>\n    )\n}"]},"metadata":{},"sourceType":"module"}