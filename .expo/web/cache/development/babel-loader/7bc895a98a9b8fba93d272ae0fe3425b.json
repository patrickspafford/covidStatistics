{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/patrickspafford/Documents/gitRepos/covidApp/screens/dailyStats.js\";\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { LineChart, BarChart, PieChart, ProgressChart, StackedBarChart } from 'react-native-chart-kit';\nimport { Ionicons } from '@expo/vector-icons';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ListItem } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nvar screenHeight = Dimensions.get(\"window\").height;\nvar screenWidth = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  pageTitle: {\n    textAlign: 'center'\n  },\n  textStyle: {\n    color: \"white\",\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#0C2340'\n  },\n  contentContainer: {\n    paddingTop: 15,\n    backgroundColor: '#0C2340'\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#ffffff',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#0C2340',\n    flexDirection: 'row'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n});\n\nfunction OptionButton(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label;\n  return React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0, 1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, label)));\n}\n\nexport default function dailyStats() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      states = _React$useState2[0],\n      setStates = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      cases = _React$useState4[0],\n      setCases = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tested = _React$useState6[0],\n      setTested = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      deaths = _React$useState8[0],\n      setDeaths = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      hospitalized = _React$useState10[0],\n      setHospitalized = _React$useState10[1];\n\n  React.useEffect(function () {\n    function fetchData() {\n      var res;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://covidtracking.com/api/states\"));\n\n            case 2:\n              res = _context.sent;\n              res.json().then(function (res) {\n                var statesArray = [];\n                var casesArray = [];\n                var testedArray = [];\n                var deathsArray = [];\n                var hospitalizedArray = [];\n                res.forEach(function (info) {\n                  statesArray.push(info.state);\n                  casesArray.push(info.positive);\n                  testedArray.push(info.totalTestResults);\n                  deathsArray.push(info.death);\n                  hospitalizedArray.push(info.hospitalizedCumulative);\n                });\n                setStates(statesArray);\n                setCases(casesArray);\n                setTested(testedArray);\n                setDeaths(deathsArray);\n                setHospitalized(hospitalizedArray);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  var barChartConfig = {\n    backgroundGradientFrom: \"#0C2340\",\n    backgroundGradientFromOpacity: 1,\n    backgroundGradientTo: \"#000000\",\n    backgroundGradientToOpacity: 0,\n    fillShadowGradient: \"rgb(255, 255, 255)\",\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(255, 255, 255, \" + opacity + \")\";\n    },\n    strokeWidth: 2,\n    barPercentage: 0.8\n  };\n  var colors = [\"FFFFFF\", \"000000\", \"333333\", \"666666\", \"999999\", \"CCCCCC\", \"CCCC99\", \"9999CC\", \"666699\", \"660000\", \"663300\", \"996633\", \"003300\", \"003333\", \"003399\", \"000066\", \"330066\", \"660066\", \"990000\", \"993300\", \"CC9900\", \"006600\", \"336666\", \"0033FF\", \"000099\", \"660099\", \"990066\", \"CC0000\", \"CC3300\", \"FFCC00\", \"009900\", \"006666\", \"0066FF\", \"0000FF\", \"9900CC\", \"FF0099\", \"CC3333\", \"FF6600\", \"FFFF33\", \"00FF00\", \"00CCCC\", \"00CCFF\", \"3366FF\", \"9933FF\", \"FF00FF\", \"FF6666\", \"FF6633\", \"FFFF66\", \"66FF66\", \"66CCCC\", \"00FFFF\", \"3399FF\", \"9966FF\", \"FF66FF\", \"FF9999\", \"FF9966\", \"FFFF99\", \"99FF99\", \"66FFCC\", \"99FFFF\", \"66CCFF\", \"9999FF\", \"FF99FF\"];\n  var testedChartData = [];\n  var casesChartData = [];\n  var deathsChartData = [];\n  var stackedBarChartData = [];\n\n  for (var i = 0; i < states.length; i++) {\n    testedChartData.push({\n      name: states[i],\n      data: tested[i],\n      color: \"#\" + colors[i],\n      legendFontColor: \"#ffffff\",\n      legendFontSize: 10\n    });\n    casesChartData.push({\n      name: states[i],\n      data: cases[i],\n      color: \"#\" + colors[i + 2],\n      legendFontColor: \"#ffffff\",\n      legendFontSize: 10\n    });\n    deathsChartData.push({\n      name: states[i],\n      data: deaths[i],\n      color: \"#\" + colors[i + 5],\n      legendFontColor: \"#ffffff\",\n      legendFontSize: 10\n    });\n    var row = [states[i], deaths[i], hospitalized[i], cases[i]];\n    stackedBarChartData.push(row);\n  }\n\n  var compare = function compare(a, b) {\n    if (a[1] < b[1]) return 1;\n    if (a[1] > b[1]) return -1;\n    return 0;\n  };\n\n  var compareObject = function compareObject(a, b) {\n    if (a.data < b.data) return 1;\n    if (a.data > b.data) return -1;\n    return 0;\n  };\n\n  stackedBarChartData = stackedBarChartData.sort(compare).slice(0, 10);\n  testedChartData = testedChartData.sort(compareObject).slice(0, 10);\n  casesChartData = casesChartData.sort(compareObject).slice(0, 10);\n  deathsChartData = deathsChartData.sort(compareObject).slice(0, 10);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-medkit\",\n    label: \"Tests by State and Territory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Coronavirus Tests by US State and Territory\"), React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, React.createElement(BarChart, {\n    data: {\n      labels: states,\n      datasets: [{\n        data: tested\n      }]\n    },\n    width: 1900,\n    height: screenHeight / 4,\n    chartConfig: barChartConfig,\n    decimalPlaces: 0,\n    fromZero: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \"The 10 States and Territories with the Most Tests\"), React.createElement(PieChart, {\n    width: screenWidth,\n    height: 300,\n    data: testedChartData,\n    chartConfig: barChartConfig,\n    accessor: \"data\",\n    bgColor: \"none\",\n    paddingLeft: \"25\",\n    hasLegend: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-sad\",\n    label: \"Cases by State and Territory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Coronavirus Cases by US State and Territory\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, React.createElement(BarChart, {\n    data: {\n      labels: states,\n      datasets: [{\n        data: cases\n      }]\n    },\n    width: 1900,\n    height: screenHeight / 4,\n    chartConfig: barChartConfig,\n    decimalPlaces: 0,\n    fromZero: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"The 10 States and Territories with the Most Cases\"), React.createElement(PieChart, {\n    width: screenWidth,\n    height: 300,\n    data: casesChartData,\n    chartConfig: barChartConfig,\n    accessor: \"data\",\n    bgColor: \"none\",\n    paddingLeft: \"50\",\n    hasLegend: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"md-warning\",\n    label: \"Deaths by State and Territory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"Coronavirus Deaths by US State and Territory\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, React.createElement(BarChart, {\n    data: {\n      labels: states,\n      datasets: [{\n        data: deaths\n      }]\n    },\n    width: 1900,\n    height: screenHeight / 4,\n    decimalPlaces: 0,\n    chartConfig: barChartConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  })), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"The 10 States and Territories with the Most Deaths\"), React.createElement(PieChart, {\n    width: screenWidth,\n    height: 300,\n    data: testedChartData,\n    chartConfig: barChartConfig,\n    accessor: \"data\",\n    bgColor: \"none\",\n    paddingLeft: \"25\",\n    hasLegend: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, React.createElement(OptionButton, {\n    style: styles.option,\n    icon: \"ios-podium\",\n    label: \"Combined Stats by State and Territory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  })), React.createElement(CollapseBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      paddingLeft: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, React.createElement(StackedBarChart, {\n    data: {\n      labels: stackedBarChartData.map(function (data) {\n        return data[0];\n      }),\n      legend: [\"Cases\", \"Hospitalized\", \"Deaths\"],\n      data: stackedBarChartData.map(function (data) {\n        return data.slice(1, 4);\n      }),\n      barColors: [\"#FF0000\", \"#FFFF00\", \"#00FF00\"]\n    },\n    width: 800,\n    height: screenHeight / 2,\n    decimalPlaces: 0,\n    chartConfig: barChartConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/patrickspafford/Documents/gitRepos/covidApp/screens/dailyStats.js"],"names":["WebBrowser","React","LineChart","BarChart","PieChart","ProgressChart","StackedBarChart","Ionicons","ListItem","Collapse","CollapseHeader","CollapseBody","RectButton","ScrollView","screenHeight","Dimensions","get","height","screenWidth","width","styles","StyleSheet","create","pageTitle","textAlign","textStyle","color","fontSize","paddingTop","container","flex","backgroundColor","contentContainer","optionIconContainer","marginRight","option","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","flexDirection","lastOption","optionText","alignSelf","marginTop","OptionButton","icon","label","optionTextContainer","dailyStats","useState","states","setStates","cases","setCases","tested","setTested","deaths","setDeaths","hospitalized","setHospitalized","useEffect","fetchData","fetch","res","json","then","statesArray","casesArray","testedArray","deathsArray","hospitalizedArray","forEach","info","push","state","positive","totalTestResults","death","hospitalizedCumulative","catch","err","console","log","barChartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","fillShadowGradient","opacity","strokeWidth","barPercentage","colors","testedChartData","casesChartData","deathsChartData","stackedBarChartData","i","length","name","data","legendFontColor","legendFontSize","row","compare","a","b","compareObject","sort","slice","alignContent","labels","datasets","paddingLeft","map","legend","barColors"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { LineChart, BarChart, PieChart, ProgressChart, StackedBarChart } from 'react-native-chart-kit'\nimport { Ionicons } from '@expo/vector-icons';\nimport { Image, Platform, StyleSheet, Text, ListItem, TouchableOpacity, View, Dimensions } from 'react-native';\nimport { Collapse, CollapseHeader, CollapseBody} from 'accordion-collapse-react-native'\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\nconst screenHeight = Dimensions.get(\"window\").height;\nconst screenWidth = Dimensions.get(\"window\").width;\nconst styles = StyleSheet.create({\n    pageTitle:{\n        textAlign: 'center'\n    },\n    textStyle: {\n        color: \"white\",\n        fontSize: 20,\n        textAlign: 'center',\n        paddingTop: 10\n    },\n    container: {\n      flex: 1,\n      backgroundColor: '#0C2340',\n    },\n    contentContainer: {\n      paddingTop: 15,\n      backgroundColor: '#0C2340'\n    },\n    optionIconContainer: {\n      marginRight: 12,\n    },\n    option: {\n      backgroundColor: '#ffffff',\n      paddingHorizontal: 15,\n      paddingVertical: 15,\n      borderWidth: StyleSheet.hairlineWidth,\n      borderBottomWidth: 0,\n      borderColor: '#0C2340',\n      flexDirection: 'row'\n    },\n    lastOption: {\n      borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n    optionText: {\n      fontSize: 15,\n      alignSelf: 'flex-start',\n      marginTop: 1,\n    },\n  });\nfunction OptionButton({ icon, label }) {\n    return (\n        <View style={styles.option}>\n          <View style={styles.optionIconContainer}>\n            <Ionicons name={icon} size={22} color=\"rgba(0,0,0, 1)\" />\n          </View>\n          <View style={styles.optionTextContainer}>\n            <Text style={styles.optionText}>{label}</Text>\n          </View>\n        </View>\n    );\n  }\n\nexport default function dailyStats() {\n    const [states, setStates] = React.useState([])\n    const [cases, setCases] = React.useState([])\n    const [tested, setTested] = React.useState([])\n    const [deaths, setDeaths] = React.useState([])\n    const [hospitalized, setHospitalized] = React.useState([])\n    React.useEffect( () => {\n        async function fetchData() {\n            const res = await fetch(\"https://covidtracking.com/api/states\")\n            res.json().then(res => {\n            let statesArray = []\n            let casesArray = []\n            let testedArray = []\n            let deathsArray = []\n            let hospitalizedArray = []\n            res.forEach(info => {\n                statesArray.push(info.state)\n                casesArray.push(info.positive)\n                testedArray.push(info.totalTestResults)\n                deathsArray.push(info.death)\n                hospitalizedArray.push(info.hospitalizedCumulative)\n            })\n            setStates(statesArray)\n            setCases(casesArray)\n            setTested(testedArray)\n            setDeaths(deathsArray)\n            setHospitalized(hospitalizedArray)\n        })\n        .catch(err => console.log(err))\n        }\n    fetchData();  \n    }, []) \n    const barChartConfig = {\n        backgroundGradientFrom: `#0C2340`,\n        backgroundGradientFromOpacity: 1,\n        backgroundGradientTo: `#000000`,\n        backgroundGradientToOpacity: 0,\n        fillShadowGradient: `rgb(255, 255, 255)`,\n        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n        strokeWidth: 2, // optional, default 3\n        barPercentage: 0.8,\n    }\n    const colors = [\"FFFFFF\", \"000000\", \"333333\", \"666666\", \"999999\", \"CCCCCC\", \"CCCC99\", \"9999CC\", \"666699\", \"660000\", \"663300\", \"996633\", \"003300\", \"003333\", \"003399\", \"000066\", \"330066\", \"660066\", \"990000\", \"993300\", \"CC9900\", \"006600\", \"336666\", \"0033FF\", \"000099\", \"660099\", \"990066\", \"CC0000\", \"CC3300\", \"FFCC00\", \"009900\", \"006666\", \"0066FF\", \"0000FF\", \"9900CC\", \"FF0099\", \"CC3333\", \"FF6600\", \"FFFF33\", \"00FF00\", \"00CCCC\", \"00CCFF\", \"3366FF\", \"9933FF\", \"FF00FF\", \"FF6666\", \"FF6633\", \"FFFF66\", \"66FF66\", \"66CCCC\", \"00FFFF\", \"3399FF\", \"9966FF\", \"FF66FF\", \"FF9999\", \"FF9966\", \"FFFF99\", \"99FF99\", \"66FFCC\", \"99FFFF\", \"66CCFF\", \"9999FF\", \"FF99FF\"]\n    let testedChartData = []\n    let casesChartData = []\n    let deathsChartData = []\n    let stackedBarChartData = []\n    for (let i = 0; i < states.length; i++) {\n        testedChartData.push(\n            {\n                name: states[i],\n                data: tested[i],\n                color: `#${colors[i]}`,\n                legendFontColor: `#ffffff`,\n                legendFontSize: 10\n\n            }\n        )\n        casesChartData.push(\n            {\n                name: states[i],\n                data: cases[i],\n                color: `#${colors[i + 2]}`,\n                legendFontColor: `#ffffff`,\n                legendFontSize: 10\n            }\n        )\n        deathsChartData.push(\n            {\n                name: states[i],\n                data: deaths[i],\n                color: `#${colors[i + 5]}`,\n                legendFontColor: `#ffffff`,\n                legendFontSize: 10\n            }\n        )\n        let row = [states[i], deaths[i], hospitalized[i], cases[i]]\n        stackedBarChartData.push(row)\n    }\n    \n    const compare = (a,b) => {\n        if (a[1] < b[1]) return 1;\n        if (a[1] > b[1]) return -1;\n        return 0;\n    }\n    const compareObject = (a, b) => {\n        if (a.data < b.data) return 1;\n        if (a.data > b.data) return -1;\n        return 0;\n    }\n    stackedBarChartData = stackedBarChartData.sort(compare).slice(0,10);\n    testedChartData = testedChartData.sort(compareObject).slice(0, 10)\n    casesChartData = casesChartData.sort(compareObject).slice(0, 10);\n    deathsChartData = deathsChartData.sort(compareObject).slice(0, 10);\n    return (\n        <ScrollView style={styles.container}>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"md-medkit\" label=\"Tests by State and Territory\" />\n                </CollapseHeader>\n                <CollapseBody>\n                <Text style={styles.textStyle}>Coronavirus Tests by US State and Territory</Text>\n                    <ScrollView horizontal={true} style={{alignContent: 'center'}}>\n                        <BarChart data={{labels: states, datasets: [{ data: tested }]}} width={1900} height={screenHeight / 4} chartConfig={barChartConfig} decimalPlaces={0} fromZero={true} />\n                    </ScrollView>\n                    <Text style={styles.textStyle}>The 10 States and Territories with the Most Tests</Text>\n                    <PieChart width={screenWidth} height={300} data={testedChartData} chartConfig={barChartConfig} accessor=\"data\" bgColor=\"none\" paddingLeft=\"25\" hasLegend={true} />\n                </CollapseBody>\n            </Collapse>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"md-sad\" label=\"Cases by State and Territory\" />\n                </CollapseHeader>\n                <CollapseBody>\n                <Text style={styles.textStyle}>Coronavirus Cases by US State and Territory</Text>\n                    <ScrollView horizontal={true}>\n                        <BarChart data={{ labels: states, datasets: [{ data: cases }] }} width={1900} height={screenHeight / 4} chartConfig={barChartConfig} decimalPlaces={0} fromZero={true} />\n                    </ScrollView>\n                    <Text style={styles.textStyle}>The 10 States and Territories with the Most Cases</Text>\n                    <PieChart width={screenWidth} height={300} data={casesChartData} chartConfig={barChartConfig} accessor=\"data\" bgColor=\"none\" paddingLeft=\"50\" hasLegend={true} /> \n                </CollapseBody>\n            </Collapse>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"md-warning\" label=\"Deaths by State and Territory\" />\n                </CollapseHeader>\n                <CollapseBody>\n                    <Text style={styles.textStyle}>Coronavirus Deaths by US State and Territory</Text>\n                    <ScrollView horizontal={true}>\n                        <BarChart data={{ labels: states, datasets: [{ data: deaths }]}} width={1900} height={screenHeight / 4} decimalPlaces={0} chartConfig={barChartConfig} />\n                    </ScrollView>\n                    <Text style={styles.textStyle}>The 10 States and Territories with the Most Deaths</Text>\n                    <PieChart width={screenWidth} height={300} data={testedChartData} chartConfig={barChartConfig} accessor=\"data\" bgColor=\"none\" paddingLeft=\"25\" hasLegend={true} />\n                </CollapseBody>\n            </Collapse>\n            <Collapse>\n                <CollapseHeader>\n                    <OptionButton style={styles.option} icon=\"ios-podium\" label=\"Combined Stats by State and Territory\" />\n                </CollapseHeader>\n                <CollapseBody>\n                    <ScrollView horizontal={true} style={{paddingLeft: 15}}>\n                        <StackedBarChart data={{ labels: stackedBarChartData.map(data => data[0]), legend: [\"Cases\", \"Hospitalized\", \"Deaths\"],\n                        data: stackedBarChartData.map(data => data.slice(1, 4)),barColors: [\"#FF0000\", \"#FFFF00\", \"#00FF00\"] }} width={800} \n                        height={screenHeight / 2} decimalPlaces={0} chartConfig={barChartConfig} />\n                    </ScrollView>\n                </CollapseBody>\n            </Collapse>\n        </ScrollView>\n    )\n}"]},"metadata":{},"sourceType":"module"}